name: Deploy Fullstack App to EKS

on:
  push:
    branches:
      - main

env:
  TF_DIR: terraform-eks
  APP_DIR: application
  REGION: ${{ secrets.AWS_REGION }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.REGION }}

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      working-directory: ${{ env.TF_DIR }}
      run: terraform init -reconfigure

    - name: Terraform Apply to create EKS cluster only
      working-directory: ${{ env.TF_DIR }}
      run: terraform apply -auto-approve -target=module.eks

    - name: Terraform Apply to create rest
      working-directory: ${{ env.TF_DIR }}
      run: terraform apply -auto-approve


    - name: Extract Terraform Outputs
      id: tfout
      working-directory: ${{ env.TF_DIR }}
      run: |
        echo "alb_dns=$(terraform output -raw alb_dns_name)" >> $GITHUB_ENV
        echo "ecr_uri=$(terraform output -raw ecr_repo_url)" >> $GITHUB_ENV
        echo "eks_cluster_name=$(terraform output -raw eks_cluster_name)" >> $GITHUB_ENV

    - name: Authenticate Docker to ECR
      run: |
        aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin ${{ env.ecr_uri }}

    - name: Build React App with Dynamic Backend URL
      working-directory: ${{ env.APP_DIR }}/frontend
      run: |
        REACT_APP_BACKEND_URL=http://${{ env.alb_dns }}/api npm install
        REACT_APP_BACKEND_URL=http://${{ env.alb_dns }}/api npm run build

    - name: Build and Push Docker Image to ECR
      working-directory: ${{ env.APP_DIR }}/frontend
      run: |
        docker build -t frontend:v3.0 .
        docker tag frontend:v3.0 ${{ env.ecr_uri }}:frontend3.0
        docker push ${{ env.ecr_uri }}:frontend3.0

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --region $REGION --name ${{ env.eks_cluster_name }}

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f $APP_DIR/k8s/backend-deployment.yaml
        kubectl apply -f $APP_DIR/k8s/frontend-deployment.yaml
        kubectl apply -f $APP_DIR/k8s/ingress.yaml
